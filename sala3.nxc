#include "pose.h"
#include "controle.h"


task main(){

    float som_erro_theta = 0;

    float erro_theta = 0;
    float erro_linear = 0;
    int ponto = 0;// contador que recebe 1 sempre que o pose_ref[] é alterado.
    bool primeira_vez = true;
	
    Acionamento motor;
    Pose pose_atual;
    Pose refer;
    refer.x = 0;
    refer.y = 0;
    refer.theta = 0;

    Pose pose_ref[12];
    //ANDAR PARA FRENTE
    pose_ref[0].x = 25;
    pose_ref[0].y = 0;
    pose_ref[0].theta = 0;
    //GIRA ATÉ CHEGAR EM 90°
    pose_ref[1].x = 25;
    pose_ref[1].y = 0;
    pose_ref[1].theta = -90;
   //ANDAR APENAS NO EIXO Y
    pose_ref[2].x = 25;
    pose_ref[2].y = -50;
    pose_ref[2].theta = -90;
   //GIRA ATÉ CHEGAR EM 180°
    pose_ref[3].x = 25;
    pose_ref[3].y = -50;
    pose_ref[3].theta = 0;
   //ANDAR APENAS NO EIXO X
    pose_ref[4].x = 50;
    pose_ref[4].y = -50;
    pose_ref[4].theta = 0;
    //GIRA ATÉ CHEGAR EM 90°
    pose_ref[5].x = 50;
    pose_ref[5].y = -50;
    pose_ref[5].theta = 90;
    //ANDA APENAS NO EIXO Y
    pose_ref[6].x = 50;
    pose_ref[6].y = 0;
    pose_ref[6].theta = 90;
    //GIRA ATÉ CHEGAR EM 0°
    pose_ref[7].x = 50;
    pose_ref[7].y = 0;
    pose_ref[7].theta = 0; 
	
	pose_ref[8].x = 75;
    pose_ref[8].y = 0;
    pose_ref[8].theta = 0; 

	pose_ref[9].x = 75;
    pose_ref[9].y = 0;
    pose_ref[9].theta = -90; 

	pose_ref[10].x = 75;
    pose_ref[10].y = -50;
    pose_ref[10].theta = -90;

	pose_ref[11].x = 75;
    pose_ref[11].y = -50;
    pose_ref[11].theta = 0;  
 
    refer = pose_ref[ponto];
	SetSensorLowspeed(IN_4);
	float sensorSonar;

    while(true){
        TextOut(0, LCD_LINE8, "Ponto");
        NumOut(40, LCD_LINE8, ponto);
        //OnRevSyncPID(OUT_AB, -velocidade_linear, percent_giro, 30, 90, 50);
        atualiza_pose2(pose_atual);  //lê os sensores e atualiza a pose do robô
        //roda o código de controle  utilizando a referência e a pose e o resultado é colocado em motor
        erro_linear = -(controle_linear(refer,pose_atual,motor));
        TextOut(0,LCD_LINE7,"Vel");
        NumOut(20, LCD_LINE7, motor.vel);
        //aciona os motores utilizando a velocidade do motor e o percentural de giro do motor.
        OnFwdSyncPID(OUT_AB, motor.vel, motor.per_giro, 30, 90, 50);
        //calcula o erro theta do robô
        erro_theta = atan2(refer.theta - pose_atual.theta);
		if(erro_linear > -9 && erro_linear < 9){
		    if(primeira_vez){
		        ponto = ponto + 1;
		        refer = pose_ref[ponto];
		        primeira_vez = false;
		    }
		    atualiza_pose2(pose_atual);
		    //roda o código de controle  utilizando a referência e a pose e o resultado é colocado em motor
		    erro_theta = controle_angular(refer, pose_atual, motor);
		    //aciona os motores utilizando a velocidade do motor e o percentural de giro do motor.
		    OnFwdSyncPID(OUT_AB, motor.vel, motor.per_giro, 30, 90, 50);

		    if(erro_theta > -9 && erro_theta < 9){
		        ponto = ponto + 1;
		        refer = pose_ref[ponto];
		        som_erro_theta = 0;
		        primeira_vez = true;
		    }
		}
		sensorSonar = SensorUS(IN_4);
        Stop(ponto > 12);
        //Código para Debug
		TextOut(0,LCD_LINE1, "x");
		NumOut(50, LCD_LINE1, pose_atual.x);
		TextOut(0,LCD_LINE2, "y");
		NumOut(50, LCD_LINE2, pose_atual.y);
		TextOut(0,LCD_LINE3, "theta");
		NumOut(50, LCD_LINE3, pose_atual.theta);
		TextOut(0,LCD_LINE5, "erro_lin");
		NumOut(50, LCD_LINE5, erro_linear);
		TextOut(0, LCD_LINE6, "erro_ang");
		NumOut(50, LCD_LINE6, erro_theta);
		TextOut(50,LCD_LINE7,"US");
        NumOut(65, LCD_LINE7, sensorSonar);

		Wait(1000);
		ClearScreen();
    }

}
